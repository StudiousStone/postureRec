# 
# Report generation script generated by Vivado
# 

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
proc start_step { step } {
  set stopFile ".stop.rst"
  if {[file isfile .stop.rst]} {
    puts ""
    puts "*** Halting run - EA reset detected ***"
    puts ""
    puts ""
    return -code error
  }
  set beginFile ".$step.begin.rst"
  set platform "$::tcl_platform(platform)"
  set user "$::tcl_platform(user)"
  set pid [pid]
  set host ""
  if { [string equal $platform unix] } {
    if { [info exist ::env(HOSTNAME)] } {
      set host $::env(HOSTNAME)
    }
  } else {
    if { [info exist ::env(COMPUTERNAME)] } {
      set host $::env(COMPUTERNAME)
    }
  }
  set ch [open $beginFile w]
  puts $ch "<?xml version=\"1.0\"?>"
  puts $ch "<ProcessHandle Version=\"1\" Minor=\"0\">"
  puts $ch "    <Process Command=\".planAhead.\" Owner=\"$user\" Host=\"$host\" Pid=\"$pid\">"
  puts $ch "    </Process>"
  puts $ch "</ProcessHandle>"
  close $ch
}

proc end_step { step } {
  set endFile ".$step.end.rst"
  set ch [open $endFile w]
  close $ch
}

proc step_failed { step } {
  set endFile ".$step.error.rst"
  set ch [open $endFile w]
  close $ch
}


start_step init_design
set ACTIVE_STEP init_design
set rc [catch {
  create_msg_db init_design.pb
  set_param general.maxThreads 8
  create_project -in_memory -part xczu9eg-ffvb1156-2-e
  set_property board_part xilinx.com:zcu102:part0:3.2 [current_project]
  set_property design_mode GateLvl [current_fileset]
  set_param project.singleFileAddWarning.threshold 0
  set_property webtalk.parent_dir D:/postureRec/posture_recognition/posture_recognition.cache/wt [current_project]
  set_property parent.project_path D:/postureRec/posture_recognition/posture_recognition.xpr [current_project]
  set_property ip_output_repo D:/postureRec/posture_recognition/posture_recognition.cache/ip [current_project]
  set_property ip_cache_permissions {read write} [current_project]
  set_property XPM_LIBRARIES {XPM_CDC XPM_MEMORY} [current_project]
  add_files -quiet D:/postureRec/posture_recognition/posture_recognition.runs/synth_1/pl_top.dcp
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/combine2data_fifo/combine2data_fifo.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/fifo_shift_window/fifo_shift_window.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/float_add_IP_use_DSP_multilatency/float_add_IP_use_DSP_multilatency.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/float_multiply/float_multiply.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/floating_point_compare/floating_point_compare.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/head_fifo/head_fifo.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/head_for_interate_dram/head_for_interate_dram.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/image_prerd_toaxi_fifo/image_prerd_toaxi_fifo.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/image_ram/image_ram.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/image_ram_rd_addr_add/image_ram_rd_addr_add.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/kernel_fifo/kernel_fifo.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/PLL/PLL.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/post_image_ram/post_image_ram.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/stayInstep_fifo/stayInstep_fifo.xci
  read_ip -quiet D:/postureRec/posture_recognition/posture_recognition.srcs/sources_1/ip/sub_unit/sub_unit.xci
  read_xdc D:/postureRec/posture_recognition/posture_recognition.srcs/constrs_1/new/pin.xdc
  link_design -top pl_top -part xczu9eg-ffvb1156-2-e
  close_msg_db -file init_design.pb
} RESULT]
if {$rc} {
  step_failed init_design
  return -code error $RESULT
} else {
  end_step init_design
  unset ACTIVE_STEP 
}

start_step opt_design
set ACTIVE_STEP opt_design
set rc [catch {
  create_msg_db opt_design.pb
  opt_design 
  write_checkpoint -force pl_top_opt.dcp
  close_msg_db -file opt_design.pb
} RESULT]
if {$rc} {
  step_failed opt_design
  return -code error $RESULT
} else {
  end_step opt_design
  unset ACTIVE_STEP 
}

start_step place_design
set ACTIVE_STEP place_design
set rc [catch {
  create_msg_db place_design.pb
  if { [llength [get_debug_cores -quiet] ] > 0 }  { 
    implement_debug_core 
  } 
  place_design 
  write_checkpoint -force pl_top_placed.dcp
  close_msg_db -file place_design.pb
} RESULT]
if {$rc} {
  step_failed place_design
  return -code error $RESULT
} else {
  end_step place_design
  unset ACTIVE_STEP 
}

start_step route_design
set ACTIVE_STEP route_design
set rc [catch {
  create_msg_db route_design.pb
  route_design 
  write_checkpoint -force pl_top_routed.dcp
  close_msg_db -file route_design.pb
} RESULT]
if {$rc} {
  write_checkpoint -force pl_top_routed_error.dcp
  step_failed route_design
  return -code error $RESULT
} else {
  end_step route_design
  unset ACTIVE_STEP 
}

